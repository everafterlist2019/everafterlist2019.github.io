{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/employees/employee-list/employee-list.component.html","webpack:///./src/app/employees/employee/employee.component.html","webpack:///./src/app/employees/employees.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contenteditable-model.directive.ts","webpack:///./src/app/employees/employee-list/employee-list.component.css","webpack:///./src/app/employees/employee-list/employee-list.component.ts","webpack:///./src/app/employees/employee/employee.component.css","webpack:///./src/app/employees/employee/employee.component.ts","webpack:///./src/app/employees/employees.component.css","webpack:///./src/app/employees/employees.component.ts","webpack:///./src/app/shared/employee.service.ts","webpack:///./src/app/sort-by.pipe.ts","webpack:///./src/app/sortable.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,qJ;;;;;;;;;;;ACAA,uZAAuZ,iTAAiT,4BAA4B,uGAAuG,mCAAmC,MAAM,kBAAkB,qHAAqH,mCAAmC,KAAK,eAAe,40BAA40B,sCAAsC,6BAA6B,kOAAkO,4BAA4B,8oBAA8oB,oMAAoM,+BAA+B,g5CAAg5C,iTAAiT,4BAA4B,uGAAuG,mCAAmC,MAAM,kBAAkB,qHAAqH,mCAAmC,KAAK,eAAe,g4BAAg4B,wBAAwB,qYAAqY,mDAAmD,iZAAiZ,wUAAwU,6CAA6C,mwBAAmwB,oCAAoC,wBAAwB,uPAAuP,kBAAkB,uBAAuB,GAAG,wNAAwN,mDAAmD,2PAA2P,kOAAkO,6CAA6C,6gCAA6gC,wBAAwB,qYAAqY,mDAAmD,iZAAiZ,wUAAwU,6CAA6C,+gB;;;;;;;;;;;ACA3wW,2nB;;;;;;;;;;;ACAA,mO;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,mBAAmB,CAAC;IAC9B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACS;AACe;AACpB;AACkC;AACrC;AAGK;AACY;AACU;AACO;AACc;AAC9B;AACJ;AACZ;AACa;AACyB;AAE7B;AACa;AA2BlE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kFAAkB;gBAClB,yFAAiB;gBACjB,uGAAqB;gBACrB,yDAAU;gBACV,sEAAiB;gBACjB,+FAA6B;aAC9B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,+DAAiB,CAAC,aAAa,CAAC,wEAAW,CAAC,cAAc,CAAC;gBAC3D,8EAAsB;gBACtB,0DAAW;gBACX,4FAAuB;gBACvB,uDAAY,CAAC,OAAO,EAAE;gBACtB,sEAAc;gBACd,gFAAqB;gBACrB,0DAAW;gBACX,kEAAmB;aACpB;YACD,SAAS,EAAE,CAAC,yEAAe,CAAC;YAC5B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;AChDsE;AAC5F,gFAAgF;AAQhF;IAOC,uCAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QALC,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;IAMlE,CAAC;IAED,mDAAW,GAAX,UAAY,OAAO;QAClB,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,aAAa,EAAE;YAC7E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK;YAC/B,IAAI,CAAC,WAAW,EAAE;SAClB;IACF,CAAC;IAED,8CAAM,GAAN;QACC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS;QAC9C,IAAI,CAAC,aAAa,GAAG,KAAK;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACxB,CAAC;IAEO,mDAAW,GAAnB;QACC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK;IAChD,CAAC;IAxB8B;QAA9B,2DAAK,CAAC,sBAAsB,CAAC;;gEAAY;IACJ;QAArC,4DAAM,CAAC,4BAA4B,CAAC;;iEAA6B;IAFtD,6BAA6B;QANzC,+DAAS,CAAC;YACV,QAAQ,EAAE,wBAAwB;YAClC,IAAI,EAAE;gBACL,QAAQ,EAAE,UAAU;aACpB;SACD,CAAC;+EAQ0B,wDAAU;OAPzB,6BAA6B,CA0BzC;IAAD,oCAAC;CAAA;AA1ByC;;;;;;;;;;;;ACT1C,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;ACAJ;AACT;AACgB;AAEvB;AAC8C;AAKhD;AAEI;AAS7C;IAeE,+BAAoB,OAAwB,EAClC,SAA2B,EAC3B,MAAoB,EACpB,GAAqB;QAHX,YAAO,GAAP,OAAO,CAAiB;QAClC,cAAS,GAAT,SAAS,CAAkB;QAC3B,WAAM,GAAN,MAAM,CAAc;QACpB,QAAG,GAAH,GAAG,CAAkB;QAP/B,uBAAkB,GAAG,uDAAuD,CAAC;QAC7E,cAAS,GAAG,IAAI,0DAAW,CAAC;IASzB,CAAC;IAIJ,wCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,qBAAW;YAC/C,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,cAAI;gBAC9B,OAAO,iDACL,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CACf,CAAC;YAChB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAGH;6BACqB;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAEvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gDAAgD,CAAC,CAAC;IAG5E,CAAC;IAGD,4BAA4B;IAC5B,qDAAqD;IACrD,uCAAO,GAAP,UAAQ,OAAgB,EAAE,GAAS,EAAE,CAAU;QAC7C,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,YAAY;QACZ,IAAI,CAAC,KAAK,IAAI,EAAC;YACb,IAAI,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAC,CAAC,CAAC;YACxC,IAAI,MAAM,GAAG,EAAC,IAAI,EAAC,EAAE,EAAE,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,KAAK,EAAC,CAAC;YAC1E,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;SACzD;QACD,+BAA+B;aAC1B;YACH,IAAI,OAAO,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,KAAK;gBAClB,WAAW,EAAE,KAAK;gBAClB,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,MAAM,EAAE,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,KAAK,EAAC,EAAC,EAAC,IAAI,EAAC,MAAM,EAAE,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,KAAK,EAAC,CAAC;aAC9I,CAAC;YAEF,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;gBACpB,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAC,OAAO,EAAE,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,KAAK,EAAC,EAAC,EAAC,IAAI,EAAC,MAAM,EAAE,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,KAAK,EAAC,CAAC;aAExJ;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;aAChD,CAAC;SACH;QAED,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAExB,CAAC;IAID,+BAA+B;IAC/B,0CAAU,GAAV,UAAY,IAAU,EAAE,GAAS,EAAE,CAAU,EAAE,CAAU;QACvD,kBAAkB;QAClB,IAAG,IAAI,KAAI,IAAI,EAAC;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;aAC9C,CAAC;SACH;QACD,qBAAqB;aAChB;YACH,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;SACzD;IACH,CAAC;IAED,wCAAQ,GAAR,UAAU,GAAQ;QAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;IAC1D,CAAC;IAED,kDAAkB,GAAlB,UAAmB,SAAc,EAAE,OAAY,EAAE,QAAa,EAAE,IAAW;QACzE,IAAG,IAAI,IAAI,OAAO,EAAC;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC;aAClD,CAAC;SACH;QACD,IAAG,IAAI,IAAI,OAAO,EAAC;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC;aAClD,CAAC;SACH;QACD,2BAA2B;QAC3B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;YAClC,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAC;gBACpC,KAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBAC9C,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAC;wBACnD,IAAI,IAAI,IAAI,OAAO,EAAC;4BAClB,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;yBAC9C;wBACD,IAAI,IAAI,IAAI,OAAO,EAAC;4BAClB,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;yBAC9C;qBACF;iBACF;aACF;SACF;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,0BAA0B;IAC1B,kDAAkB,GAAlB,UAAmB,SAAc,EAAE,OAAY,EAAE,QAAa,EAAE,IAAW;QACzE,mCAAmC;QACnC,IAAG,IAAI,IAAI,OAAO,EAAC;YACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;SAC7D;QACD,IAAG,IAAI,IAAI,OAAO,EAAC;YACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;SAC7D;QAED,qCAAqC;QACrC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;YAClC,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAC;gBACpC,KAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBAC9C,IAAG,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,EAAC;wBAEnD,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC;qBACtD;iBACF;aACF;SACF;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;IAChE,CAAC;IAED,oEAAoE;IACpE,kDAAkB,GAAlB,UAAmB,SAAc,EAAE,SAAiB,EAAE,YAAoB,EAAE,IAAY;QACtF,sEAAsE;QACtE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG;YACT,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI;YAC/B,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI;YACzD,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI;SAC9D,CAAC;QAEF,IAAG,IAAI,IAAI,OAAO,EAAC;YACjB,wBAAwB;YACxB,IAAI,aAAa,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC;YAC5E,IAAI,aAAa,IAAI,IAAI,EAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;iBAC7C,CAAC;aACH;YACD,8BAA8B;iBAC1B;gBACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;iBAC9C,CAAC;aAEH;SACF;QACD,aAAa;aACR;YACH,wBAAwB;YACxB,IAAI,aAAa,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC;YAC5E,IAAI,aAAa,IAAI,IAAI,EAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;iBAC7C,CAAC;aACH;YACD,8BAA8B;iBAC1B;gBACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,KAAK,EAAE,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;iBAC9C,CAAC;aAEH;SACF;IAEH,CAAC;IAaD,aAAa;IACd,0CAAU,GAAV;QACE,IAAM,KAAK,GAAG,YAAY;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,EAAE,sDAAS,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC;SAC7C,CAAC;IACJ,CAAC;IAED,0CAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,EAAG,sDAAS,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC;SAC/C,CAAC;IACJ,CAAC;IAOA,0CAAU,GAAV,UAAW,GAAa;QACtB,IAAI,UAAU,GAAG,EAAC,IAAI,EAAC,GAAG,CAAC,UAAU,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC;QAClD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAExD,CAAC;IAED,yDAAyD;IACzD,yFAAyF;IACzF,8CAAc,GAAd,UAAe,GAAY,EAAE,OAAe,EAAE,CAAQ;QACpD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,oCAAoC;IACpC,6EAA6E;IAC7E,6CAAa,GAAb,UAAc,GAAa,EAAE,CAAQ;QACnC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACtD,CAAC;IAEH,sCAAM,GAAN,UAAO,GAAa,EAAE,GAAY,EAAE,CAAU;QAC5C,2CAA2C;QAC3C,IAAI,GAAG,IAAG,IAAI,EAAC;YACb,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;SAC5B;QACD,0CAA0C;QAC1C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,4DAA4D;IAC5D;;;;OAIG;IAEH,wCAAQ,GAAR,UAAS,EAAU;QACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/C,qBAAqB;QACrB,8DAA8D;IAChE,CAAC;IAED,2CAAW,GAAX;QACE,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YACrD,0EAA0E;SAC3E;QACD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;YAClC,gCAAgC;YAChC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAEzE;IACH,CAAC;IAED,2CAAW,GAAX,UAAY,KAA4B,EAAE,GAAQ,EAAE,MAAW,EAAE,IAAY;QAC3E,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,CAAC;QACrC,IAAI,KAAK,CAAC,iBAAiB,KAAK,KAAK,CAAC,SAAS,EAAE;YAC/C,gFAAiB,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EACjE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC;SAC3C;aACI;YACH,qBAAqB;YACrB,IAAI,MAAM,IAAI,IAAI,EAAC;gBACjB,8EAAe,CAAC,MAAM,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;aAClE;YACD,yBAAyB;iBACrB;gBACF,8EAAe,CAAC,GAAG,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;aAC/D;YAED,0BAA0B;YAC1B,IAAI,IAAI,IAAE,QAAQ,EAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;aACzD;iBACI,IAAI,IAAI,IAAE,OAAO,EAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;aACzD;iBACG;gBACF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;aACzD;SACF;IACH,CAAC;IArUU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,mLAA6C;;SAE9C,CAAC;+EAgB6B,+EAAe;YACvB,wEAAgB;YACpB,wDAAa;YACf,wEAAgB;OAlBpB,qBAAqB,CA0UjC;IAAD,4BAAC;CAAA;AA1UiC;;;;;;;;;;;;ACrBlC,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;ACAb;AACgB;AAEP;AAChB;AAO3C;IAEE,2BAAoB,OAAwB,EAClC,SAA0B,EAC1B,MAAsB;QAFZ,YAAO,GAAP,OAAO,CAAiB;QAClC,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAgB;IAAI,CAAC;IAErC,oCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,qCAAS,GAAT,UAAW,IAAa;QACtB,IAAI,IAAI,IAAG,IAAI;YACb,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;YACtB,EAAE,EAAE,IAAI;YACR,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,KAAK;YAClB,YAAY,EAAE,CAAC;YACf,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,KAAK;YACX,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,EAAC,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC;SAC9D;IACH,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAY;QACnB,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,EAAC,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,EAAC;YACxB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,kCAAkC;SACnC;aACG;YACF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9D,sCAAsC;SACvC;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACrB,iEAAiE;IACnE,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,oKAAwC;;SAEzC,CAAC;+EAG6B,+EAAe;YACxB,wEAAgB;YACjB,wDAAa;OAJrB,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;;;;;;;;;;;;ACX9B,+DAA+D,mJ;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,6JAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;;;;;;;;ACPY;AAEgB;AAK3D;IAGE,yBAAoB,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAI,CAAC;IAEnD,sCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;IAC9D,CAAC;IAPU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI8B,wEAAgB;OAHnC,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;;;;;;;;;ACPwB;AACxB;AAK5B;IAAA;IAQA,CAAC;IANC,8BAAS,GAAT,UAAU,KAAY,EAAE,MAAc,EAAE,KAAU;QAAV,kCAAU;QAChD,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE,CAAC,WAAW;QACrF,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE,CAAC,2BAA2B;QACpE,OAAO,8CAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IANU,UAAU;QAHtB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,UAAU,CAQtB;IAAD,iBAAC;CAAA;AARsB;;;;;;;;;;;;;;;;;;;;ACCA;AAEuB;AAK9C;IAQE,2BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAJxB,SAAI,GAAG,IAAI,0DAAY,EAAE,CAAC;IAIC,CAAC;IAEtC,2CAAe,GAAf;QAAA,iBAMC;QALC,IAAI,CAAC,QAAQ,GAAG,IAAI,2DAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;YAClD,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC7D,CAAC;IAED,sCAAU,GAAV,UAAW,CAAC;QACV;;;;;mDAK2C;QACnC,yBAAQ,EAAE,qBAAQ,CAAO;QACjC,0DAA0D;QAE1D,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAhCD;QADC,2DAAK,EAAE;;mDACI;IAEF;QAAT,4DAAM,EAAE;;mDAA2B;IAJzB,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;+EASwB,wDAAU;OARvB,iBAAiB,CAmC7B;IAAD,wBAAC;CAAA;AAnC6B;;;;;;;;;;;;;ACd9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAG;QACf,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,qCAAqC;QACjD,WAAW,EAAE,4CAA4C;QACzD,SAAS,EAAE,qBAAqB;QAChC,aAAa,EAAE,iCAAiC;QAChD,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,qCAAqC;KAC7C;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACxBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"\\\">\\n  <app-employees></app-employees>\\n</div>\\n\"","module.exports = \"<div class=\\\"listsWrapper\\\">\\n  <!--START USER 1 LIST-->\\n  <div class=\\\"user1List user\\\">\\n      <h1 class=\\\"display-4\\\">Shari</h1>\\n      <ul *ngIf=\\\"doc$ | async as doc\\\" cdkDropList [cdkDropListData]=\\\"doc.user1\\\" #mainList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"reorderList($event, doc.user1, null, 'user1')\\\">\\n          <li class=\\\"task-wrapper\\\" *ngFor=\\\"let currTask of doc.user1; let i = index\\\" cdkDrag>\\n            <div class=\\\"task\\\" >\\n              <input (change)=\\\"fromUserEditMaster(doc.tasks, doc.user1, currTask, 'user1')\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.subtaskDone\\\" />\\n              <!--<textarea [(ngModel)]=\\\"currTask.name\\\" class=\\\"autosize\\\" [ngClass]=\\\"{'done': currTask.done==true}\\\" (blur)=\\\"editTask(doc.tasks)\\\"></textarea>-->\\n              <div>\\n                <p [ngClass]=\\\"{'done': currTask.subtaskDone==true}\\\" >{{currTask.subtask}}</p>\\n                <p class=\\\"from\\\">\\n                  <span>from </span>\\n                  <span [ngClass]=\\\"{'done': currTask.subtaskDone==true}\\\">{{currTask.name}}</span>\\n                </p>\\n              </div>\\n              <!--<input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser1List\\\" />\\n              <input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser2List\\\" />-->\\n              <span class=\\\"trash\\\" (click)=\\\"deleteFromUserList(doc.tasks, doc.user1, currTask, 'user1')\\\">X</span>\\n            </div>\\n          </li>\\n      </ul>\\n  </div>\\n  <!--END USER 2 LIST-->\\n  <!--START MASTER LIST-->\\n  <div class=\\\"masterList\\\">\\n    <h1 class=\\\"display-4\\\">Task List</h1>\\n    <ul *ngIf=\\\"doc$ | async as doc\\\" cdkDropList [cdkDropListData]=\\\"doc.tasks\\\" #mainList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"reorderList($event, doc.tasks, null, 'master')\\\">\\n        <li class=\\\"task-wrapper\\\" *ngFor=\\\"let currTask of doc.tasks; let i = index\\\" cdkDrag [ngClass]=\\\"{'label': currTask.done==null}\\\">\\n          <div class=\\\"task\\\" >\\n            <input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.done\\\" />\\n            <textarea [(ngModel)]=\\\"currTask.name\\\" class=\\\"autosize\\\" [ngClass]=\\\"{'done': currTask.done==true}\\\" (blur)=\\\"editTask(doc.tasks)\\\"></textarea>\\n            <!--<input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser1List\\\" />\\n            <input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser2List\\\" />-->\\n            <span class=\\\"trash\\\" (click)=\\\"deleteTask(currTask)\\\">X</span>\\n          </div>\\n          <div class=\\\"subtasks\\\">\\n            <ul cdkDropList [cdkDropListData]=\\\"currTask.subtasks\\\" #secondList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"reorderList($event, doc.tasks, currTask.subtasks, 'master')\\\">\\n              <li *ngFor=\\\"let currSubtask of currTask.subtasks; let x = index\\\" cdkDrag>\\n                <input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currSubtask.done\\\" />\\n                <textarea class=\\\"autosize\\\" [ngClass]=\\\"{'done': currSubtask.done==true}\\\" (blur)=\\\"editTask(doc.tasks)\\\" [(ngModel)]=\\\"currSubtask.name\\\"></textarea>\\n                <input (change)=\\\"fromMasterEditUser(doc.tasks, i, x, 'user1')\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currSubtask.inUser1List\\\" />\\n                <input (change)=\\\"fromMasterEditUser(doc.tasks, i, x, 'user2')\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currSubtask.inUser2List\\\" />\\n                <a class=\\\"trash\\\" (click)=\\\"deleteTask(null, doc.tasks, i, x)\\\">-</a>\\n              </li>\\n              <li>\\n                <!--<input type=\\\"text\\\" [(ngModel)]=\\\"newTaskName\\\"/>-->\\n                <a class=\\\"add\\\" (click)=\\\"addTask(null, doc.tasks, i)\\\">+</a>\\n              </li>\\n            </ul>\\n          </div>\\n\\n        </li>\\n    </ul>\\n\\n    <div>\\n      <input class=\\\"newTask\\\" type=\\\"text\\\" [(ngModel)]=\\\"newTaskName\\\"/>\\n      <a (click)=\\\"addTask('label', null, null)\\\" class=\\\"btn \\\">ADD NEW LABEL</a>\\n      <a (click)=\\\"addTask(null, null, null)\\\" class=\\\"btn \\\">ADD NEW TASK</a>\\n    </div>\\n  </div>\\n  <!--END MASTER LIST-->\\n  <!--START USER 2 LIST-->\\n  <!--START USER 1 LIST-->\\n  <div class=\\\"user2List user\\\">\\n      <h1 class=\\\"display-4\\\">Kevin</h1>\\n      <ul *ngIf=\\\"doc$ | async as doc\\\" cdkDropList [cdkDropListData]=\\\"doc.user2\\\" #mainList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"reorderList($event, doc.user2, null, 'user2')\\\">\\n          <li class=\\\"task-wrapper\\\" *ngFor=\\\"let currTask of doc.user2; let i = index\\\" cdkDrag>\\n            <div class=\\\"task\\\" >\\n              <input (change)=\\\"fromUserEditMaster(doc.tasks, doc.user2, currTask, 'user2')\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.subtaskDone\\\" />\\n              <!--<textarea [(ngModel)]=\\\"currTask.name\\\" class=\\\"autosize\\\" [ngClass]=\\\"{'done': currTask.done==true}\\\" (blur)=\\\"editTask(doc.tasks)\\\"></textarea>-->\\n              <div>\\n                <p [ngClass]=\\\"{'done': currTask.subtaskDone==true}\\\" >{{currTask.subtask}}</p>\\n                <p class=\\\"from\\\">\\n                  <span>from </span>\\n                  <span [ngClass]=\\\"{'done': currTask.subtaskDone==true}\\\">{{currTask.name}}</span>\\n                </p>\\n              </div>\\n              <!--<input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser1List\\\" />\\n              <input (change)=\\\"editTask(doc.tasks)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"currTask.inUser2List\\\" />-->\\n              <span class=\\\"trash\\\" (click)=\\\"deleteFromUserList(doc.tasks, doc.user2, currTask, 'user2')\\\">X</span>\\n            </div>\\n          </li>\\n      </ul>\\n  </div>\\n  <!--END USER 2 LIST-->\\n</div>\\n\\n\\n\\n<!--\\n<div class=\\\"listsWrapper\\\">\\n  <div class=\\\"user1List\\\">\\n      <h1 class=\\\"display-4\\\">User1</h1>\\n      <div cdkDropList  [cdkDropListData]=\\\"list\\\" #firstList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n        <div *ngFor=\\\"let emp of list | sortBy:'displayOrder': 'asc'\\\" >\\n          <ul *ngIf=\\\"emp.inUser1List === true\\\" class=\\\"task-wrapper\\\" cdkDrag [ngClass]=\\\"{'label': emp.done==null}\\\" >\\n            <div >\\n                <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.inUser1List\\\" />\\n\\n                <li class=\\\"task\\\">\\n                  <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.done\\\" />\\n                  <textarea class='autoExpand' rows='1' data-min-rows='1' placeholder='Auto-Expanding Textarea' [ngClass]=\\\"{'done': emp.done==true,'not-done': emp.done==false}\\\" (blur)=\\\"onEdit(emp)\\\" type=\\\"text\\\" [(ngModel)]=\\\"emp.fullName\\\"></textarea>\\n                  <a class=\\\"btn \\\" (click)=\\\"onDelete(emp.id)\\\">X</a>\\n\\n                </li>\\n                <li cdkDropList  [cdkDropListData]=\\\"emp.subTasks\\\" #secondList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"dropSubTask($event, emp)\\\" class=\\\"subTasks\\\">\\n                  <ul *ngFor=\\\"let sub of emp.subTasks; let i = index\\\" [attr.data-index]=\\\"i\\\" cdkDrag>\\n                    <div >\\n                      <input (change)=\\\"onCheckSubTask(emp,sub.done,i)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"sub.done\\\" />\\n                      <textarea class='autoExpand' rows='1' data-min-rows='1' placeholder='Auto-Expanding Textarea' [ngClass]=\\\"{'done': sub.done,'not-done': sub.done==false}\\\" (blur)=\\\"onEdit(emp,sub.name,i)\\\" type=\\\"text\\\" [(ngModel)]=\\\"sub.name\\\"></textarea>\\n                      <a (click)=\\\"deleteSubTask(emp,i)\\\" class=\\\"btn \\\">-</a>\\n                    </div>\\n                  </ul>\\n\\n                </li>\\n                <li>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"emp.newSubTask\\\"/>\\n                  <a (click)=\\\"addSubTask(emp)\\\" class=\\\"btn \\\">+</a>\\n\\n                </li>\\n            </div>\\n          </ul>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"masterList\\\">\\n      <h1 class=\\\"display-4\\\">Task List</h1>\\n      <div cdkDropList  [cdkDropListData]=\\\"list\\\" #firstList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n        <ul class=\\\"task-wrapper\\\" *ngFor=\\\"let emp of list; let x=index\\\" cdkDrag [ngClass]=\\\"{'label': emp.done==null}\\\">\\n\\n          <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.inUser1List\\\" />\\n          <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.inUser2List\\\" />\\n          <li class=\\\"task\\\">\\n            <p>{{emp.displayOrder}}</p>\\n            <p>{{x}}</p>\\n            <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.done\\\" />\\n            <textarea class='autoExpand' rows='1' data-min-rows='1' placeholder='Auto-Expanding Textarea' [ngClass]=\\\"{'done': emp.done==true,'not-done': emp.done==false}\\\" (blur)=\\\"onEdit(emp)\\\" type=\\\"text\\\" [(ngModel)]=\\\"emp.fullName\\\"></textarea>\\n            <a class=\\\"btn \\\" (click)=\\\"onDelete(emp.id)\\\">X</a>\\n\\n          </li>\\n          <li class=\\\"subTasks\\\">\\n            <ul *ngFor=\\\"let sub of emp.subTasks; let i = index\\\" [attr.data-index]=\\\"i\\\" cdkDrag>\\n              <div >\\n                <input (change)=\\\"onCheckSubTask(emp,sub.done,i)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"sub.done\\\" />\\n                <textarea [ngClass]=\\\"{'done': sub.done,'not-done': sub.done==false}\\\" (blur)=\\\"onEdit(emp,sub.name,i)\\\" type=\\\"text\\\" [(ngModel)]=\\\"sub.name\\\"></textarea>\\n                <a (click)=\\\"deleteSubTask(emp,i)\\\" class=\\\"btn \\\">-</a>\\n              </div>\\n            </ul>\\n\\n          </li>\\n          <li>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"emp.newSubTask\\\"/>\\n            <a (click)=\\\"addSubTask(emp)\\\" class=\\\"btn \\\">+</a>\\n\\n          </li>\\n\\n        </ul>\\n      </div>\\n      <div>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"newTaskName\\\"/>\\n        <a (click)=\\\"addLabel(newTaskName)\\\" class=\\\"btn \\\">ADD NEW LABEL</a>\\n        <a (click)=\\\"addTask(newTaskName)\\\" class=\\\"btn \\\">ADD NEW TASK</a>\\n      </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"user2List\\\">\\n      <h1 class=\\\"display-4\\\">User 2</h1>\\n      <div cdkDropList  [cdkDropListData]=\\\"list\\\" #firstList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n        <div *ngFor=\\\"let emp of list | sortBy:'displayOrder': 'asc'\\\" >\\n          <ul *ngIf=\\\"emp.inUser2List === true\\\" class=\\\"task-wrapper\\\" cdkDrag [ngClass]=\\\"{'label': emp.done==null}\\\" >\\n            <div >\\n                <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.inUser2List\\\" />\\n\\n                <li class=\\\"task\\\">\\n                  <input (change)=\\\"onEdit(emp)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"emp.done\\\" />\\n                  <textarea class='autoExpand' rows='1' data-min-rows='1' placeholder='Auto-Expanding Textarea' [ngClass]=\\\"{'done': emp.done==true,'not-done': emp.done==false}\\\" (blur)=\\\"onEdit(emp)\\\" type=\\\"text\\\" [(ngModel)]=\\\"emp.fullName\\\"></textarea>\\n                  <a class=\\\"btn \\\" (click)=\\\"onDelete(emp.id)\\\">X</a>\\n\\n                </li>\\n                <li cdkDropList  [cdkDropListData]=\\\"emp.subTasks\\\" #secondList=\\\"cdkDropList\\\" (cdkDropListDropped)=\\\"dropSubTask($event, emp)\\\" class=\\\"subTasks\\\">\\n                  <ul *ngFor=\\\"let sub of emp.subTasks; let i = index\\\" [attr.data-index]=\\\"i\\\" cdkDrag>\\n                    <div >\\n                      <input (change)=\\\"onCheckSubTask(emp,sub.done,i)\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"sub.done\\\" />\\n                      <textarea class='autoExpand' rows='1' data-min-rows='1' placeholder='Auto-Expanding Textarea' [ngClass]=\\\"{'done': sub.done,'not-done': sub.done==false}\\\" (blur)=\\\"onEdit(emp,sub.name,i)\\\" type=\\\"text\\\" [(ngModel)]=\\\"sub.name\\\"></textarea>\\n                      <a (click)=\\\"deleteSubTask(emp,i)\\\" class=\\\"btn \\\">-</a>\\n                    </div>\\n                  </ul>\\n\\n                </li>\\n                <li>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"emp.newSubTask\\\"/>\\n                  <a (click)=\\\"addSubTask(emp)\\\" class=\\\"btn \\\">+</a>\\n\\n                </li>\\n            </div>\\n          </ul>\\n        </div>\\n      </div>\\n  </div>\\n</div>-->\\n\"","module.exports = \"<!--<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.id\\\">\\n  <div class=\\\"form-group\\\">\\n    <input name=\\\"fullName\\\" #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"New Task\\\" required>\\n    <div *ngIf=\\\"fullName.invalid && fullName.touched\\\" class=\\\"validation-error\\\">this field is required</div>\\n    <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-info\\\" name=\\\"button\\\">Add</button>\\n  </div>\\n</form>-->\\n\"","module.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"\\\">\\n      <!--current task list-->\\n      <app-employee-list></app-employee-list>\\n      <!-- add new form -->\\n      <!--<app-employee></app-employee>-->\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular7Firestore';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { AppComponent } from './app.component';\nimport { environment } from 'src/environments/environment';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { EmployeeComponent } from './employees/employee/employee.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { EmployeeService } from './shared/employee.service';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { SortByPipe } from './sort-by.pipe';\nimport { SortableDirective } from './sortable.directive';\nimport { ContenteditableModelDirective } from './contenteditable-model.directive';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ContenteditableModule } from '@ng-stack/contenteditable';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    EmployeeComponent,\n    EmployeeListComponent,\n    SortByPipe,\n    SortableDirective,\n    ContenteditableModelDirective\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    DragDropModule,\n    ContenteditableModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Directive, ElementRef, Input, Output, EventEmitter, OnChanges} from \"@angular/core\";\n//import {isPropertyUpdated} from \"@angular/src/common/forms/directives/shared\";\n\n@Directive({\n\tselector: '[contenteditableModel]',\n\thost: {\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class ContenteditableModelDirective implements OnChanges {\n\t@Input('contenteditableModel') model: any;\n\t@Output('contenteditableModelChange') update = new EventEmitter();\n\n\tprivate lastViewModel: any;\n\n\n\tconstructor(private elRef: ElementRef) {\n\t}\n\n\tngOnChanges(changes) {\n\t\tif (changes['model'] && changes['model'].currentValue !== this.lastViewModel) {\n\t\t\tthis.lastViewModel = this.model\n\t\t\tthis.refreshView()\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tvar value = this.elRef.nativeElement.innerText\n\t\tthis.lastViewModel = value\n\t\tthis.update.emit(value)\n\t}\n\n\tprivate refreshView() {\n\t\tthis.elRef.nativeElement.innerText = this.model\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZS1saXN0L2VtcGxveWVlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { Employee } from 'src/app/shared/employee.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\nimport * as _ from 'lodash';\nimport { AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { firestore } from 'firebase/app';\n\nimport { FormControl } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  newTaskName: string;\n  list: Employee[];\n  user1List: Employee[];\n  user2List: Employee[];\n\n\n  docRef: AngularFirestoreDocument;\n  doc$: Observable<any>;\n\n\n  templateDrivenForm = 'This is contenteditable text for template-driven form';\n  myControl = new FormControl;\n\n\n  constructor(private service: EmployeeService,\n    private firestore: AngularFirestore,\n    private toastr:ToastrService,\n    private afs: AngularFirestore) {\n\n\n     }\n\n\n\n  ngOnInit() {\n    this.newTaskName = '';\n    this.service.getEmployees().subscribe(actionArray =>{\n      this.list = actionArray.map(item => {\n        return {\n          id: item.payload.doc.id,\n          ...item.payload.doc.data()\n        } as Employee;\n      })\n    });\n\n\n    /*this.list = _.orderBy(this.list, ['orderBy'],['asc']);\n    this.updateOrder();*/\n\n    this.docRef = this.afs.doc(`tasks/master`);\n    this.doc$ = this.docRef.valueChanges();\n\n    this.myControl.setValue(`This is contenteditable text for reactive form`);\n\n\n  }\n\n\n  //ADD NEW Task to masterList\n  //Given string, create new task and push to firestore\n  addTask(isLabel?: string, arr?: any, i?: number) {\n    console.log(\"add task: \" + this.newTaskName);\n    //IF SUBTASK\n    if (i !== null){\n      var newIndex = arr[i].subtasks.length+1;\n      var newSub = {name:\"\", inUser1List:false, inUser2List: false, done:false};\n      arr[i].subtasks.push(newSub);\n      this.firestore.doc('tasks/master').update({tasks: arr});\n    }\n    //ELSE IT'S A NEW TASK OR LABEL\n    else {\n      var newTask = {\n        name: this.newTaskName,\n        done: false,\n        inUser1List: false,\n        inUser2List: false,\n        subtasks: [{name:'sub1', inUser1List:false, inUser2List: false, done:false},{name:'sub2', inUser1List:false, inUser2List: false, done:false}]\n      };\n\n      if (isLabel != null) {\n        newTask.done = null;\n        newTask.subtasks = [{name:'Lead.', inUser1List:false, inUser2List: false, done:false},{name:'Lag.', inUser1List:false, inUser2List: false, done:false}]\n\n      }\n\n      this.docRef.update({\n        tasks: firestore.FieldValue.arrayUnion(newTask)\n      })\n    }\n\n    this.newTaskName = '';\n\n  }\n\n\n\n  //DELETE NEW Task to masterList\n  deleteTask (task?: any, arr?: any, i?: number, x?: number){\n    //IF DELETING TASK\n    if(task !==null){\n      this.docRef.update({\n        tasks: firestore.FieldValue.arrayRemove(task)\n      })\n    }\n    //IF DELETING SUBTASK\n    else {\n      arr[i].subtasks.splice(x,1);\n      this.firestore.doc('tasks/master').update({tasks: arr});\n    }\n  }\n\n  editTask (arr: any) {\n    this.firestore.doc('tasks/master').update({tasks: arr});\n  }\n\n  deleteFromUserList(masterArr: any, userArr: any, userTask: any, user:string){\n    if(user == 'user1'){\n      this.docRef.update({\n        user1: firestore.FieldValue.arrayRemove(userTask)\n      })\n    }\n    if(user == 'user2'){\n      this.docRef.update({\n        user2: firestore.FieldValue.arrayRemove(userTask)\n      })\n    }\n    //uncheck from master lists\n    for(var i=0;i<masterArr.length;i++) {\n      if(masterArr[i].name == userTask.name){\n        for (var x=0;x<masterArr[i].subtasks.length;x++){\n          if(masterArr[i].subtasks[x].name == userTask.subtask){\n            if (user == 'user1'){\n              masterArr[i].subtasks[x].inUser1List = false;\n            }\n            if (user == 'user2'){\n              masterArr[i].subtasks[x].inUser2List = false;\n            }\n          }\n        }\n      }\n    }\n    this.firestore.doc('tasks/master').update({tasks: masterArr});\n  }\n\n  //user: 'user1' or 'user2'\n  fromUserEditMaster(masterArr: any, userArr: any, userTask: any, user:string){\n    //UPDATE DONE CHECKBOX IN USER LIST\n    if(user == 'user1'){\n      this.firestore.doc('tasks/master').update({user1: userArr});\n    }\n    if(user == 'user2'){\n      this.firestore.doc('tasks/master').update({user2: userArr});\n    }\n\n    //UPDATE DONE CHECKBOX IN master LIST\n    for(var i=0;i<masterArr.length;i++) {\n      if(masterArr[i].name == userTask.name){\n        for (var x=0;x<masterArr[i].subtasks.length;x++){\n          if(masterArr[i].subtasks[x].name == userTask.subtask){\n\n            masterArr[i].subtasks[x].done = userTask.subtaskDone;\n          }\n        }\n      }\n    }\n    this.firestore.doc('tasks/master').update({tasks: masterArr});\n  }\n\n  //based on checkbox in master list, add or delete items to user list\n  fromMasterEditUser(masterArr: any, taskIndex: number, subtaskIndex: number, user: string){\n    //update list first to make sure checkbox is persistent in master list\n    this.firestore.doc('tasks/master').update({tasks: masterArr});\n    var task = {\n      nameIndex: taskIndex,\n      name: masterArr[taskIndex].name,\n      subtaskIndex: subtaskIndex,\n      subtask: masterArr[taskIndex].subtasks[subtaskIndex].name,\n      subtaskDone: masterArr[taskIndex].subtasks[subtaskIndex].done\n    };\n\n    if(user == \"user1\"){\n      //if adding to user list\n      var user1checkbox = masterArr[taskIndex].subtasks[subtaskIndex].inUser1List;\n      if (user1checkbox == true){\n        this.docRef.update({\n          user1: firestore.FieldValue.arrayUnion(task)\n        })\n      }\n      //else deleting from user list\n      else{\n        this.docRef.update({\n          user1: firestore.FieldValue.arrayRemove(task)\n        })\n\n      }\n    }\n    //ELSE USER 2\n    else {\n      //if adding to user list\n      var user2checkbox = masterArr[taskIndex].subtasks[subtaskIndex].inUser2List;\n      if (user2checkbox == true){\n        this.docRef.update({\n          user2: firestore.FieldValue.arrayUnion(task)\n        })\n      }\n      //else deleting from user list\n      else{\n        this.docRef.update({\n          user2: firestore.FieldValue.arrayRemove(task)\n        })\n\n      }\n    }\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n  // ...omitted\n appendItem() {\n   const emoji = '🍺 Beer Me'\n   this.docRef.update({\n     favs: firestore.FieldValue.arrayUnion(emoji)\n   })\n }\n\n removeItem(emoji) {\n   this.docRef.update({\n     favs:  firestore.FieldValue.arrayRemove(emoji)\n   })\n }\n\n\n\n\n\n\n  addSubTask(emp: Employee) {\n    var subTaskObj = {name:emp.newSubTask,done:false};\n    emp.subTasks.push(subTaskObj);\n    emp.newSubTask = '';\n    this.firestore.doc('employees/' + emp.id).update(emp);\n\n  }\n\n  //PURPOSE: to store/edit done boolean value for sub tasks\n  //GIVEN list/employee object and index of subtask array, update boolean value in database\n  onCheckSubTask(emp:Employee, subDone:boolean, i:number) {\n    this.firestore.doc('employees/' + emp.id).update(emp);\n  }\n\n  //PURPOSE: to delete subtask of item\n  //Given list/employee object and index of subtask array, delete item at index\n  deleteSubTask(emp: Employee, i:number){\n    emp.subTasks.splice(i,1);\n    this.firestore.doc('employees/' + emp.id).update(emp);\n    }\n\n  onEdit(emp: Employee, sub?: string, i?: number) {\n    //if it's a subtask, first update employee.\n    if (sub!= null){\n      emp.subTasks[i].name = sub;\n    }\n    //console.log(\"on edit\"+ emp.inUser2List);\n    this.firestore.doc('employees/' + emp.id).update(emp);\n  }\n\n  //Given task/employee object, reset the value for newSubTask\n  /*clearTask(emp: Employee) {\n    console.log(\"current value: \" + emp.newSubTask);\n    emp.newSubTask = '';\n    console.log(\"current value: \" + emp.newSubTask);\n  }*/\n\n  onDelete(id: string) {\n    this.firestore.doc('employees/' + id).delete();\n    //this.updateOrder();\n    //this.toastr.warning('Deleted successfully','EMP. Register');\n  }\n\n  updateOrder(){\n    for(var i=0;i<this.list.length;i++) {\n      this.list[i].displayOrder = i;\n      console.log(\"move item\" + i);\n      console.log(\"move item\" + this.list[i].fullName);\n      console.log(\"move item\" + this.list[i].displayOrder);\n      //this.firestore.doc('employees/' + this.list[i].id).update(this.list[i]);\n    }\n    for(var i=0;i<this.list.length;i++) {\n      //this.list[i].displayOrder = i;\n      console.log(\"move item\" + i);\n      console.log(\"move item\" + this.list[i].fullName);\n      console.log(\"move item\" + this.list[i].displayOrder);\n      this.firestore.doc('employees/' + this.list[i].id).update(this.list[i]);\n\n    }\n  }\n\n  reorderList(event: CdkDragDrop<string[]>, arr: any, subArr: any, list: string) {\n    console.log(\"drop function: \" + arr);\n    if (event.previousContainer !== event.container) {\n      transferArrayItem(event.previousContainer.data,event.container.data,\n        event.previousIndex, event.currentIndex)\n    }\n    else {\n      //IF MOVING SUBTASKS,\n      if (subArr != null){\n        moveItemInArray(subArr, event.previousIndex, event.currentIndex);\n      }\n      //ELSE, MOVING MAIN TASKS\n      else{\n        moveItemInArray(arr, event.previousIndex, event.currentIndex);\n      }\n\n      //UPDATE BACK TO firestore\n      if (list==\"master\"){\n        this.firestore.doc('tasks/master').update({tasks: arr});\n      }\n      else if (list==\"user1\"){\n        this.firestore.doc('tasks/master').update({user1: arr});\n      }\n      else{\n        this.firestore.doc('tasks/master').update({user2: arr});\n      }\n    }\n  }\n\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZS9lbXBsb3llZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/shared/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private service: EmployeeService,\n    private firestore:AngularFirestore,\n    private toastr : ToastrService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm( form?: NgForm){\n    if (form!= null)\n      form.resetForm();\n    this.service.formData = {\n      id: null,\n      inUser1List: false,\n      inUser2List: false,\n      displayOrder: 0,\n      fullName: '',\n      done: false,\n      newSubTask: '',\n      subTasks: [{name:'sub1',done:false},{name:'sub2',done:false}]\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    let data = Object.assign({}, form.value);\n    data.newSubTask = '';\n    data.subTasks = [{name:'sub1',done:false},{name:'sub2',done:false}];\n    delete data.id;\n    if (form.value.id == null){\n      this.firestore.collection('employees').add(data);\n      //console.log(\"id value is null\");\n    }\n    else{\n      this.firestore.doc('employees/' + form.value.id).update(data);\n      //console.log(\"id value is not null\");\n    }\n    this.resetForm(form);\n    //this.toastr.success('Submitted successfully', 'EMP. Register');\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from './employee.model';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  formData: Employee;\n\n  constructor(private firestore:AngularFirestore) { }\n\n  getEmployees(){\n    return this.firestore.collection('tasks').snapshotChanges();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'sortBy'\n})\nexport class SortByPipe implements PipeTransform {\n\n  transform(value: any[], column: string, order = ''): any[] {\n    if (!value || !column || column === '' || order === '') { return value; } // no array\n    if (value.length <= 1) { return value; } // array with only one item\n    return _.orderBy(value, [column], [order]);\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  AfterViewInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { Sortable } from '@shopify/draggable';\n\n@Directive({\n  selector: '[sortable]'\n})\nexport class SortableDirective implements AfterViewInit {\n  @Input()\n  data: any[];\n\n  @Output() stop = new EventEmitter();\n\n  sortable: Sortable;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.sortable = new Sortable(this.el.nativeElement, {\n      draggable: 'li'\n    });\n\n    this.sortable.on('sortable:stop', e => this.handleStop(e));\n  }\n\n  handleStop(e) {\n    /*console.log(\"in directive handle stop - this.data: \" + this.data);\n    console.log(\"in directive handle stop - this.data: \" + this.data[0]);\n    console.log(\"in directive handle stop - this.data: \" + this.data.length);\n\n    console.log(e);\n    console.log(\"in directive handle stop: \")*/\n    const { newIndex, oldIndex } = e;\n    //console.log(\"HANDLE STOP: \" + this.data[oldIndex].name);\n\n    const next = this.data;\n    console.log(\"HANDLE STOP: \" + this.data[oldIndex]);\n    const moved = next.splice(oldIndex, 1);\n    next.splice(newIndex, 0, moved[0]);\n\n    this.stop.emit();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyDkGXc-8d1nHxAOEtkUpDDnVGoeobhUBcc\",\n    authDomain: \"firestorecrud-e330f.firebaseapp.com\",\n    databaseURL: \"https://firestorecrud-e330f.firebaseio.com\",\n    projectId: \"firestorecrud-e330f\",\n    storageBucket: \"firestorecrud-e330f.appspot.com\",\n    messagingSenderId: \"784685414637\",\n    appId: \"1:784685414637:web:b78b60485df4b583\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}